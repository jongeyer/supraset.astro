---
// Adapted from https://github.com/withastro/astro/tree/main/examples/portfolio

import Icon from './Icon.astro';
import type { iconPaths } from './IconPaths';

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
	{ label: 'Home', href: '/' },
	{ label: 'About', href: '/about' },
	{ label: 'Work', href: '/work' },
	{ label: 'Contact', href: '/contact' },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: { label: string; href: string; icon: keyof typeof iconPaths }[] = [
	{ label: 'GitHub', href: 'https://github.com/jongeyer', icon: 'github-logo' }
];

/** Test if a link is pointing to the current page. */
const isCurrentPage = (href: string) => {
	let pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '');
	if (pathname.at(0) !== '/') pathname = '/' + pathname;
	if (pathname.at(-1) !== '/') pathname += '/';
	return pathname === href || (href !== '/' && pathname.startsWith(href));
};
---

<nav class="fixed inset-0 bottom-auto z-50">
	<div class="menu-header sm:block hidden">
		<div class="flex items-center justify-between">
			<menu-button>
				<template>
					<button class="menu-button" aria-expanded="false">
						<span class="sr-only">Menu</span>
						<Icon icon="list" />
					</button>
				</template>
			</menu-button>
		</div>
	</div>
	<noscript>
		<ul class="flex items-center gap-4 border-b border-zorba-800 p-4 bg-zorba-500">
			{
				textLinks.map(({ label, href }) => (
					<li class="block">
            <a 
              aria-current={isCurrentPage(href) ? 'page' : null} 
              href={href}
              class={`
								${isCurrentPage(href) ? 'invert' : 'text-indigo-600'}
								inline-block transition-all px-3 py-2 backdrop-filter backdrop-blur-xl
								hover:hue-rotate-60
							`}
            >
							<span>{label}</span>
            </a>
					</li>
				))
			}
		</ul>
	</noscript>
	<div id="menu-content" hidden>
		<ul class="
        h-[9vh] transition-all mx-auto flex items-center justify-between shadow-md bg-opacity-100 gap-2 border-b border-zorba-800 py-2 px-4 w-[540px]
        md:flex-row
        flex-col tracking-wide text-2xl font-bold -backdrop-hue-rotate-90
      ">
			{
				textLinks.map(({ label, href }) => (
					<li class="block">
            <a 
              aria-current={isCurrentPage(href) ? 'page' : null} 
              href={href}
              class={`
								${isCurrentPage(href) ? 'invert' : 'text-indigo-600'}
								inline-block transition-all px-3 py-2 backdrop-filter backdrop-blur-xl
								hover:hue-rotate-60
							`}
            >
              {/* {label == 'Home'
                ? <span><Icon icon="house-fill" size="1.25em" /></span>
                : <span>{label}</span>
              } */}
							<span>{label}</span>
            </a>
					</li>
				))
			}
		</ul>
	</div>
</nav>

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super();

			// Inject menu toggle button when JS runs.
			this.appendChild(this.querySelector('template')!.content.cloneNode(true));
			const btn = this.querySelector('button')!;

			// Hide menu (shown by default to support no-JS browsers).
			const menu = document.getElementById('menu-content')!;
			menu.hidden = true;
			// Add "menu-content" class in JS to avoid covering content in non-JS browsers.
			menu.classList.add('menu-content');

			/** Set whether the menu is currently expanded or collapsed. */
			const setExpanded = (expand: boolean) => {
				btn.setAttribute('aria-expanded', expand ? 'true' : 'false');
				menu.hidden = !expand;
			};

			// Toggle menu visibility when the menu button is clicked.
			btn.addEventListener('click', () => setExpanded(menu.hidden));

			// Hide menu button for large screens.
			const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
				setExpanded(e.matches);
				btn.hidden = e.matches;
			};
			const mediaQueries = window.matchMedia('(min-width: 50em)');
			handleViewports(mediaQueries);
			mediaQueries.addEventListener('change', handleViewports);
		}
	}
	customElements.define('menu-button', MenuButton);
</script>

<style>

	.menu-button {
		position: relative;
		display: flex;
		border: 0;
		border-radius: 999rem;
		padding: 0.5rem;
		font-size: 1.5rem;
		color: var(--gray-300);
		background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
		box-shadow: var(--shadow-md);
	}

	.menu-button[aria-expanded='true'] {
		color: var(--gray-0);
		background: linear-gradient(180deg, var(--gray-600), transparent),
			radial-gradient(var(--gray-900), var(--gray-800) 150%);
	}

	.menu-button[hidden] {
		display: none;
	}

	.menu-button::before {
		position: absolute;
		inset: -1px;
		content: '';
		background: var(--gradient-stroke);
		border-radius: 999rem;
		z-index: -1;
	}
</style>